/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AppUserIndexRouteImport } from './routes/app/user/index'
import { Route as AppUserSettingsRouteImport } from './routes/app/user/settings'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppUserIndexRoute = AppUserIndexRouteImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => AppRoute,
} as any)
const AppUserSettingsRoute = AppUserSettingsRouteImport.update({
  id: '/user/settings',
  path: '/user/settings',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/app/': typeof AppIndexRoute
  '/app/user/settings': typeof AppUserSettingsRoute
  '/app/user': typeof AppUserIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/app': typeof AppIndexRoute
  '/app/user/settings': typeof AppUserSettingsRoute
  '/app/user': typeof AppUserIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/app/': typeof AppIndexRoute
  '/app/user/settings': typeof AppUserSettingsRoute
  '/app/user/': typeof AppUserIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/login'
    | '/app/'
    | '/app/user/settings'
    | '/app/user'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/app' | '/app/user/settings' | '/app/user'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/login'
    | '/app/'
    | '/app/user/settings'
    | '/app/user/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/user/': {
      id: '/app/user/'
      path: '/user'
      fullPath: '/app/user'
      preLoaderRoute: typeof AppUserIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/user/settings': {
      id: '/app/user/settings'
      path: '/user/settings'
      fullPath: '/app/user/settings'
      preLoaderRoute: typeof AppUserSettingsRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppUserSettingsRoute: typeof AppUserSettingsRoute
  AppUserIndexRoute: typeof AppUserIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppUserSettingsRoute: AppUserSettingsRoute,
  AppUserIndexRoute: AppUserIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
